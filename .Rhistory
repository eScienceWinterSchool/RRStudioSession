all1 #+ stat_summary(fun.y=median, geom="point",colour='grey')
# Cange colors of points or lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("grey", "black","grey"),
guide = guide_legend(override.aes = list(
linetype = c( "solid","solid", "dashed"),
size=c(2,0.5,0.5)
)
)
)
all1 #+ stat_summary(fun.y=median, geom="point",colour='grey')
# Cange colors of points or lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("grey", "black","grey"),
guide = guide_legend(override.aes = list(
linetype = c( "solid","solid", "dashed"),
size=c(1,2,1)
)
)
)
all1 #+ stat_summary(fun.y=median, geom="point",colour='grey')
base  = ggplot(crimeYearGG,aes(x=factor(year), y=YearsToReport))
mins = base + stat_summary(fun.y=min, # function for 'y' is min()
geom="line",
show.legend = T,size=1,
aes(group=1,col='Min'))
mins # just the min values
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",
linetype='dashed',
size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxs
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",size=2,
aes(group=1,col='Median'))
minsMaxsMd
# Cange colors of points or lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("grey", "black","grey"),
guide = guide_legend(override.aes = list(
linetype = c( "solid","solid", "dashed"),
size=c(1,2,1)
)
)
)
all1 #+ stat_summary(fun.y=median, geom="point",colour='grey')
# Cange colors of points or lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("grey", "black","grey"),
guide = guide_legend(override.aes = list(
linetype = c( "dashed","solid", "dashed"),
size=c(2,3,2)
)
)
)
all1 #+ stat_summary(fun.y=median, geom="point",colour='grey')
# Cange colors of points or lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("grey", "black","grey"),
guide = guide_legend(override.aes = list(
linetype = c( "dashed","solid", "dashed")
)
)
)
all1 #+ stat_summary(fun.y=median, geom="point",colour='grey')
# Cange colors of points or lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("grey", "black","grey")
)
)
# Cange colors of points or lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("grey", "black","grey")
)
all1 #+ stat_summary(fun.y=median, geom="point",colour='grey')
# Cange colors of points or lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("grey", "black","grey")
)
all1 + stat_summary(fun.y=median, geom="point",colour='grey')
# Cange colors of points or lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("grey", "black","grey")
)
all1
# Cange colors of points or lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("grey", "black","silver")
)
all1
# Cange colors of points or lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","silver")
)
all1
# Cange colors of points or lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red")
)
all1
# Change color of lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red")
)
all1
# Change color of lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red")
)
all1
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",size=4,
aes(group=1,col='Median'))
minsMaxsMd
# Change color of lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red")
)
all1
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",size=2,
aes(group=1,col='Median'))
minsMaxsMd
crimeWeek=crime[(crime$DaysToReport<365) & (crime$year>=2000),]
crimeWeek$WeeksToReport=crimeWeek$DaysToReport/7
crimeYearGG2=crimeWeek[complete.cases(crimeWeek$WeeksToReport) &complete.cases(crimeWeek$crimecat),]
#plotting it:
base = ggplot(crimeYearGG2,aes(x=factor(year), y=WeeksToReport))
mins = base + stat_summary(fun.y=min,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=2,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",
aes(group=1,col='Median'))
all2=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("black", "grey","grey")
)
all2
#plotting it:
base = ggplot(crimeYearGG2,aes(x=factor(year), y=WeeksToReport))
mins = base + stat_summary(fun.y=min,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=2,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",
aes(group=1,col='Median'))
all2=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red")
)
all2
base= ggplot(crimeYearGG,
aes(x = reorder(crimecat, YearsToReport, FUN = max), # reorder!
y=YearsToReport))
mins = base + stat_summary(fun.y=min,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=2,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",
aes(group=1,col='Median'))
all3=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("black", "grey","grey"),
guide = guide_legend(override.aes = list(
linetype = c( "solid","solid", "dashed"),
size=c(2,0.5,0.5)))
)
all3 + coord_flip()
base= ggplot(crimeYearGG,
aes(x = reorder(crimecat, YearsToReport, FUN = max), # reorder!
y=YearsToReport))
mins = base + stat_summary(fun.y=min,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=2,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",
aes(group=1,col='Median'))
all3=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("black", "grey","grey"))
all3 + coord_flip()
base= ggplot(crimeYearGG,
aes(x = reorder(crimecat, YearsToReport, FUN = max), # reorder!
y=YearsToReport))
mins = base + stat_summary(fun.y=min,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=2,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",
aes(group=1,col='Median'))
all3=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red"))
all3 + coord_flip()
# Change color of lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red")
)
all1
base  = ggplot(crimeYearGG,aes(x=factor(year), y=YearsToReport))
mins = base + stat_summary(fun.y=min, # function for 'y' is min()
geom="line",
show.legend = T,size=1,
aes(group=1,col='Min'))
mins # just the min values
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",
linetype='dashed',
size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxs
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",size=2,
aes(group=1,col='Median'))
minsMaxsMd
# Change color of lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red")
)
all1
# data preparation:
crimeWeek=crime[(crime$DaysToReport<365) & (crime$year>=2000),]
crimeWeek$WeeksToReport=crimeWeek$DaysToReport/7
crimeYearGG2=crimeWeek[complete.cases(crimeWeek$WeeksToReport) &complete.cases(crimeWeek$crimecat),]
#plotting it:
base = ggplot(crimeYearGG2,aes(x=factor(year), y=WeeksToReport))
mins = base + stat_summary(fun.y=min,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=2,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",
aes(group=1,col='Median'))
all2=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red")
)
all2
base= ggplot(crimeYearGG,
aes(x = reorder(crimecat, YearsToReport, FUN = max), # reorder!
y=YearsToReport))
mins = base + stat_summary(fun.y=min,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=2,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",
aes(group=1,col='Median'))
all3=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red"))
all3 + coord_flip()
#plotting it:
base = ggplot(crimeYearGG2,aes(x=factor(year), y=WeeksToReport))
mins = base + stat_summary(fun.y=min,size=1,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",size=2,
aes(group=1,col='Median'))
all2=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red")
)
all2
base= ggplot(crimeYearGG,
aes(x = reorder(crimecat, YearsToReport, FUN = max), # reorder!
y=YearsToReport))
mins = base + stat_summary(fun.y=min,size=1,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median, size=2,
geom="line",
aes(group=1,col='Median'))
all3=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red"))
all3 + coord_flip()
base = ggplot(crimeYearGG2,
aes(x = reorder(crimecat, WeeksToReport, FUN = max),
y=WeeksToReport))
mins = base + stat_summary(fun.y=min,size=1,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",
aes(group=2,col='Median'))
all3=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("black", "grey","grey"))
all3+coord_flip()
base = ggplot(crimeYearGG2,
aes(x = reorder(crimecat, WeeksToReport, FUN = max),
y=WeeksToReport))
mins = base + stat_summary(fun.y=min,size=1,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,size=2,
geom="line",
aes(group=2,col='Median'))
all3=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("black", "grey","grey"))
all3+coord_flip()
base = ggplot(crimeYearGG2,
aes(x = reorder(crimecat, WeeksToReport, FUN = max),
y=WeeksToReport))
mins = base + stat_summary(fun.y=min,size=1,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,size=2,
geom="line",
aes(group=2,col='Median'))
all3=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red"))
all3+coord_flip()
#making a subset:
anovaData=crimeY2000[crimeY2000$YearsToReport>=5,]
#checking the mean per factor value:
tapply(anovaData$YearsToReport, anovaData$Precinct, mean,na.rm=T)
?scale_fill_distiller
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
# introducing ggrepel
library(ggrepel)
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,label=rowname))
num_num=merge(daysByNeigh,crimesByNeigh) #row names is the "key"
# non parametric
kruskal.test(YearsToReport ~ Precinct, data = anovaData)
# 1. MEAN of days it takes to report a crime by neighborhood
daysByNeigh=tapply(crime$DaysToReport, crime$Neighborhood, mean,na.rm=T)
# 2. PROPORTION of crimes by neighborhood
crimesByNeigh=tapply(crime$crimecat, crime$Neighborhood, length)%>%
prop.table()%>%
"*"(100)%>%
round(2)
# you have:
head(daysByNeigh)
library(tibble)
as.data.frame(daysByNeigh)%>%rownames_to_column()
daysByNeigh=as.data.frame(daysByNeigh)%>%rownames_to_column()
crimesByNeigh=as.data.frame(crimesByNeigh)%>%rownames_to_column()
num_num=merge(daysByNeigh,crimesByNeigh) #row names is the "key"
head(num_num)
# 2. PROPORTION of crimes by neighborhood
crimesByNeigh=tapply(crime$crimecat, crime$Neighborhood, length)%>%
prop.table()%>%
"*"(100)%>%
round(2)
head(crimesByNeigh)
# 1. MEAN of days it takes to report a crime by neighborhood
daysByNeigh=tapply(crime$DaysToReport, crime$Neighborhood, mean,na.rm=T)
# you have:
head(daysByNeigh)
daysByNeigh=as.data.frame(daysByNeigh)%>%rownames_to_column()
crimesByNeigh=as.data.frame(crimesByNeigh)%>%rownames_to_column()
num_num=merge(daysByNeigh,crimesByNeigh) # 'row name' is the "key"
head(num_num)
plot(num_num[,c(2:3)])
# Do the dots follow some linear trend?
lines(lowess(num_num[,c(2:3)]),col='red')
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,label=rowname))
plot1= base +  geom_point()
plot1
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
plot1= base +  geom_point()
plot1
library(ggrepel)
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
plot1= base +  geom_point()
plot1 + geom_text_repel()
library(ggrepel)
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,
label=rowname)) # you need this aesthetics!
plot1= base +  geom_point()
plot1 + geom_text_repel()
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,label=rowname))
plot1= base +  geom_point()
plot1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>7,num_num$rowname, "")))
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,label=rowname))
plot1= base +  geom_point()
plot1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>3,num_num$rowname, "")))
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,label=rowname))
plot1= base +  geom_point()
plot1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>4,num_num$rowname, "")))
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,label=rowname))
plot1= base +  geom_point()
plot1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  geom_point()
scatp1 + geom_text(aes(label=ifelse(crimesByNeigh>=5,num_num$rowname, "")))
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  geom_point()
scatp1 + geom_text(aes(label=ifelse(crimesByNeigh>=5,num_num$rowname, "")))
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  geom_hex(bins = 10)
scatp2= scatp1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>7,
num_num$rowname,
"")))
scatp2 + scale_fill_distiller(palette ="Greys",direction=1) # try -1
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  geom_hex(bins = 10)
scatp2= scatp1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname,
"")))
scatp2 + scale_fill_distiller(palette ="Greys",direction=1) # try -1
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  geom_hex(bins = 10)
scatp2= scatp1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname,
"")))
scatp2 + scale_fill_distiller(palette ="Greys",direction=-1) # try -1
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  geom_hex(bins = 10)
scatp2= scatp1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname,
"")))
scatp2 + scale_fill_distiller(palette ="Greys",direction=1) # try -1
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  stat_density_2d(aes(fill = ..density..),
geom = "raster", contour = FALSE)
scatp2=scatp1+geom_text_repel(aes(label=ifelse(crimesByNeigh>7,num_num$rowname, "")))
scatp3 = scatp2 +  scale_x_continuous(expand = c(0, 0))
scatp3 = scatp3 + scale_y_continuous(expand = c(0, 0))
scatp4 = scatp3 +  theme(legend.position='none')
scatp4 + scale_fill_distiller(palette="Greys", direction=1)
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  stat_density_2d(aes(fill = ..density..),
geom = "raster", contour = FALSE)
scatp2=scatp1+geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,num_num$rowname, "")))
scatp3 = scatp2 +  scale_x_continuous(expand = c(0, 0))
scatp3 = scatp3 + scale_y_continuous(expand = c(0, 0))
scatp4 = scatp3 +  theme(legend.position='none')
scatp4 + scale_fill_distiller(palette="Greys", direction=1)
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  stat_density_2d(aes(fill = ..density..),
geom = "raster", contour = FALSE)
scatp2=scatp1+geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
scatp3 = scatp2 +  scale_x_continuous(expand = c(0, 0))
scatp3 = scatp3 + scale_y_continuous(expand = c(0, 0))
scatp4 = scatp3# + # theme(legend.position='none')
scatp4 + scale_fill_distiller(palette="Greys", direction=1)
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  stat_density_2d(aes(fill = ..density..),
geom = "raster", contour = FALSE)
scatp2=scatp1+geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
scatp4 = scatp3 +  theme(legend.position='none')
scatp4 + scale_fill_distiller(palette="Greys", direction=1)
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  stat_density_2d(aes(fill = ..density..),
geom = "raster", contour = FALSE)
scatp2=scatp1+geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
scatp4 = scatp3 +  theme(legend.position='none')
scatp4 + scale_fill_distiller(palette="Greys", direction=1)
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  stat_density_2d(aes(fill = ..density..),
geom = "raster", contour = FALSE)
scatp2=scatp1+geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
scatp3 = scatp2 +  scale_x_continuous(expand = c(0, 0))
scatp3 = scatp3 + scale_y_continuous(expand = c(0, 0))
scatp4 = scatp3 +  theme(legend.position='none')
scatp4 + scale_fill_distiller(palette="Greys", direction=1)
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  stat_density_2d(aes(fill = ..density..),
geom = "raster", contour = FALSE)
scatp2=scatp1+geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
scatp3 = scatp2 +  theme(legend.position='none')
scatp3 + scale_fill_distiller(palette="Greys", direction=1)
scatp5 = scatp4 +  scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
scatp5
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  stat_density_2d(aes(fill = ..density..),
geom = "raster", contour = FALSE)
scatp2=scatp1+geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
scatp3 = scatp2 +  theme(legend.position='none')
scatp4= scatp3 + scale_fill_distiller(palette="Greys", direction=1)
scatp4
scatp5 = scatp4 +  scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
scatp5
